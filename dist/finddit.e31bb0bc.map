{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","post_thread","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","e","innerHTML","spinner","value","querySelector","showMessage","reddit","results","output","forEach","post","image","preview","images","source","url","readMoreURL","directToReadMore","title","truncateText","selftext","subreddit","score","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring","newURL","permalink"],"mappings":"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","file":"finddit.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export default {\r\n  search: function(searchTerm, searchLimit, sortBy) {\r\n    return fetch(\r\n      `https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => data.data.children.map(post_thread => post_thread.data))\r\n      .catch(err => console.log(err));\r\n  }\r\n};\r\n","import reddit from \"./redditapi\";\r\n\r\nconst searchForm = document.getElementById(\"search-form\");\r\nconst searchInput = document.getElementById(\"search-input\");\r\n\r\n// Form Event Listener\r\nsearchForm.addEventListener(\"submit\", e => {\r\n  // Reset if div result has previous data\r\n  document.getElementById(\"results\").innerHTML = \"\";\r\n  // Put a loading spinner\r\n  let spinner =\r\n    '<div class=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>';\r\n  document.getElementById(\"spinner\").innerHTML = spinner;\r\n  // Get search ter,\r\n  const searchTerm = searchInput.value;\r\n  // Get sort\r\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  // Get limit\r\n  const searchLimit = document.getElementById(\"limit\").value;\r\n\r\n  // Check input\r\n  if (searchTerm === \"\") {\r\n    // Show an error message\r\n    showMessage(\"Please add a search term\", \"alert-danger\");\r\n  }\r\n\r\n  // Clear input\r\n  searchInput.value = \"\";\r\n\r\n  // Search Reddit\r\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\r\n    let output = '<div class=\"card-columns\">';\r\n    // Loop through queries\r\n    console.log(results);\r\n    results.forEach(post => {\r\n      // Check for image object\r\n      const image = post.preview\r\n        ? post.preview.images[0].source.url\r\n        : \"https://static1.squarespace.com/static/553faaace4b064ab2110a741/t/5553904fe4b029532a0c92b7/1431543135204/Reddit+Logo.jpg\";\r\n\r\n      const readMoreURL = directToReadMore(post);\r\n\r\n      output += `\r\n      <div class=\"card\">\r\n      <a href=\"${\r\n        post.url\r\n      }\" target=\"_blank\"><img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\"></a>\r\n      <div class=\"card-body text-white bg-dark mb-3\">\r\n        <h5 class=\"card-title\">${post.title}</h5>\r\n        <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\r\n        <a href=\"${readMoreURL}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\r\n        <hr>\r\n        <div class=\"card-footer\">\r\n          <span class=\"badge badge-secondary mr-3\">Subreddit: ${\r\n            post.subreddit\r\n          }</span>\r\n          <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        `;\r\n    });\r\n    output += \"</div>\";\r\n    document.getElementById(\"spinner\").innerHTML = \"\";\r\n    document.getElementById(\"results\").innerHTML = output;\r\n  });\r\n\r\n  e.preventDefault();\r\n});\r\n\r\n// Show error message\r\nfunction showMessage(message, className) {\r\n  // Create div\r\n  const div = document.createElement(\"div\");\r\n  // Add classes\r\n  div.className = `alert ${className}`;\r\n  // Append Message\r\n  div.appendChild(document.createTextNode(message));\r\n  // Get parent\r\n  const searchContainer = document.getElementById(\"search-container\");\r\n  // Get search\r\n  const search = document.getElementById(\"search\");\r\n\r\n  // Insert the message\r\n  searchContainer.insertBefore(div, search);\r\n\r\n  // Timeout alert\r\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\r\n}\r\n\r\n// Truncate Text\r\nfunction truncateText(text, limit) {\r\n  const shortened = text.indexOf(\" \", limit);\r\n  if (shortened == -1) return text;\r\n  return text.substring(0, shortened);\r\n}\r\n\r\n// Direct readMore to the comment section\r\n\r\nfunction directToReadMore(post) {\r\n  let newURL = \"http://www.reddit.com\" + post.permalink;\r\n  return newURL;\r\n}\r\n"]}